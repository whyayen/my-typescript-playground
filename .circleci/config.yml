version: 2.1
commands: 
  check-skippable-pr:
    steps:
      - run: apk add --no-cache bash curl jq
      - run: echo ${CIRCLE_WORKFLOW_ID}
      - run:
          shell: /bin/bash
          name: Check skippable PR
          command: |
            required_env_vars=(
              "GITHUB_TOKEN"
            )

            for required_env_var in ${required_env_vars[@]}; do
              if [[ -z "${!required_env_var}" ]]; then
                printf "${required_env_var} not provided, but that doesn't mean we should skip CI.\n"
                exit 0
              fi
            done

            # Since we're piggybacking off of an existing OAuth var, tweak the var for our uses
            token=$(printf "${GITHUB_TOKEN}" | cut -d':' -f1)

            headers="Authorization: token $token"
            api_endpoint="https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pulls/${CIRCLE_PULL_REQUEST##*/}"

            # Fetch PR metadata from Github's API and parse fields from json
            github_res=$(curl --silent --header "${headers}" "${api_endpoint}" | jq '{mergeable_state: .mergeable_state, title: .title}')
            mergeable_state=$(printf "${github_res}" | jq '.mergeable_state')
            title=$(printf "${github_res}" | jq '.title' | tr '[:upper:]' '[:lower:]')

            if [[ "${title}" == "null" && "${mergeable_state}" == "null" ]]; then
              printf "Couldn't fetch info on PR, but that doesn't mean we should skip CI.\n"
              exit 0
            fi

            cancel_running_jobs=0

            if [[ "${mergeable_state}" == "\"draft\"" ]]; then
              printf "PR is a draft, skipping CI!\n"
              cancel_running_jobs=1
            fi

            for skip_token in '[skip ci]' '[ci skip]' '[wip]'; do
              if [[ ${title} == *"${skip_token}"* ]]; then
                printf "Found \"${skip_token}\" in PR title, skipping CI!\n"
                cancel_running_jobs=1
              fi
            done

            if [[ "${cancel_running_jobs}" == 1 ]]; then
              curl --request POST \
                --header "Circle-Token: ${CIRCLE_TOKEN}" \
                https://circleci.com/api/v2/workflow/${CIRCLE_WORKFLOW_ID}/cancel
            else
              printf "No reason to skip CI, let's go!"
            fi

            exit 0
jobs:
  check-skippable-pr:
    docker:
      - image: alpine:3.7
    steps:
      - check-skippable-pr
  test:
    docker:
      - image: alpine:3.7
    steps:
      - run:
          name: "What branch am I on?"
          command: echo ${CIRCLE_BRANCH}
workflows:
  check-skippable:
    jobs:
      - check-skippable-pr
      - test:
          requires:
            - check-skippable-pr

